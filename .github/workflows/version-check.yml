name: Version Check

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  version-check:
    name: Check Version Changes
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Checkout base branch
        run: |
          git fetch origin ${{ github.event.pull_request.base.ref }}

      - name: Setup Mr. Version
        uses: mr-version/setup@main
        with:
          version: 'prerelease'

      - name: Calculate Current Version
        id: current
        uses: mr-version/calculate@main
        with:
          config-file: 'mister-version.yaml'
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Calculate Base Version
        id: base
        uses: mr-version/calculate@main
        with:
          config-file: 'mister-version.yaml'
          ref: origin/${{ github.event.pull_request.base.ref }}

      - name: Generate Version Comparison Report
        uses: mr-version/report@main
        with:
          version: ${{ steps.current.outputs.version }}
          previous-version: ${{ steps.base.outputs.version }}
          format: 'markdown'
          output-file: 'version-comparison.md'
          include-changelog: true

      - name: Comment PR with Version Comparison
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const report = fs.readFileSync('version-comparison.md', 'utf8');
            
            // Find existing comment
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number
            });
            
            const botComment = comments.find(comment => 
              comment.user.type === 'Bot' && 
              comment.body.includes('## Version Change Report')
            );
            
            const body = `## Version Change Report\n\n${report}`;
            
            if (botComment) {
              // Update existing comment
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: body
              });
            } else {
              // Create new comment
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: body
              });
            }