name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop, 'release/*', 'hotfix/*' ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  setup:
    name: Setup Mr. Version
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
      major: ${{ steps.version.outputs.major }}
      minor: ${{ steps.version.outputs.minor }}
      patch: ${{ steps.version.outputs.patch }}
      prerelease: ${{ steps.version.outputs.prerelease }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.x'
          
      - name: Setup Mr. Version
        uses: mr-version/setup@main
        with:
          version: 'prerelease'

      - name: Calculate Version
        id: version
        uses: mr-version/calculate@main
        with:
          config-file: 'mr-version.yml'
          dry-run: 'true'

      - name: Generate Version Report Summary
        uses: mr-version/report@main
        with:
          output-format: 'markdown'
          include-commits: true
          include-dependencies: true

  build:
    name: Build and Test
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      matrix:
        project: [ExampleApp, ExampleLibrary]
    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Build with version
        run: |
          dotnet build --configuration Release --no-restore \
            -p:Version=${{ needs.setup.outputs.version }} \
            -p:AssemblyVersion=${{ needs.setup.outputs.major }}.${{ needs.setup.outputs.minor }}.${{ needs.setup.outputs.patch }}.0 \
            -p:FileVersion=${{ needs.setup.outputs.major }}.${{ needs.setup.outputs.minor }}.${{ needs.setup.outputs.patch }}.0

      - name: Test
        run: dotnet test --no-build --verbosity normal --configuration Release

      - name: Pack NuGet packages
        if: matrix.project == 'ExampleLibrary'
        run: |
          dotnet pack src/${{ matrix.project }}/${{ matrix.project }}.csproj \
            --configuration Release \
            --no-build \
            -p:PackageVersion=${{ needs.setup.outputs.version }} \
            -o ./artifacts

      - name: Upload artifacts
        if: matrix.project == 'ExampleLibrary'
        uses: actions/upload-artifact@v4
        with:
          name: nuget-packages
          path: ./artifacts/*.nupkg


  tag:
    name: Create Version Tag
    needs: [setup, build]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Mr. Version
        uses: mr-version/setup@main
        with:
          version: 'prerelease'

      - name: Create Git Tag
        uses: mr-version/tag@main
        with:
          repository-path: '.'
          projects: 'src/**/*.csproj'
          tag-prefix: 'v'
          create-global-tags: true
          global-tag-strategy: 'all'
          tag-message-template: 'Release {version} for {project}'
          only-changed: true
          dry-run: 'true'

  release:
    name: Create GitHub Release
    needs: [setup, build, tag]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4

      - name: Create Release
        uses: mr-version/release@main
        with:
          version: ${{ needs.setup.outputs.version }}
          tag: v${{ needs.setup.outputs.version }}
          name: 'Release ${{ needs.setup.outputs.version }}'
          draft: false
          prerelease: ${{ needs.setup.outputs.prerelease != '' }}
          files: |
            nuget-packages/*.nupkg